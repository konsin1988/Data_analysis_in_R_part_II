df[,2:length(df)][sapply(df_IV, function(x) shapiro.test(x)$p.value > 0.05)]
fit <- lm(cbind(df[,1],
df[,2:length(df)][sapply(df_IV, function(x) shapiro.test(x)$p.value > 0.05)]))
summary(fit)$coef[1:4, 1]
smart_lm <- function(x){
fit <- lm(cbind(x[,1],
x[,2:length(df)][sapply(df_IV,
function(x) shapiro.test(x)$p.value > 0.05)]))
summary(fit)$coef[1:4, 1]
}
smart_lm(swiss)
test_data <- data.frame(x = 1:100, y = 1:100, z = 1:100)
smart_lm(test_data)
smart_lm <- function(x){
fit <- lm(cbind(x[,1],
x[,2:length(x)][sapply(df_IV,
function(x) shapiro.test(x)$p.value > 0.05)]))
summary(fit)$coef[1:4, 1]
}
smart_lm(swiss)
smart_lm(test_data)
df
df %>%
subset(select = 2:length(.))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(function(x) shapiro.test(x)$p.value > 0.05))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(lm(cbind(df[,1], .))))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = lm(cbind(df[,1], .)))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = summary(lm(cbind(df[,1], .)))$coef[1:4, 1])
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1]))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = mod)
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = mod, 1)
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = mod)[1]
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = mod)
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = mod) %$%
[1]
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = [1, mod])
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1])) %>%
subset(select = mod)
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05)) %>%
mutate(mod = list(summary(lm(cbind(df[,1], .)))$coef[1:4, 1]))
df %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05))
smart_lm <- function(x){
x_IV <- x %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05))
fit <- lm(cbind(x[,1], x_IV))
summary(fit)$coef[1:4, 1]
}
smart_lm(swiss)
smart_lm(test_data)
smart_lm <- function(x){
x_IV <- x %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05))
if(length(x_IV) == 0){
return("There are no normal variables in the data")
} else {
fit <- lm(cbind(x[,1], x_IV))
summary(fit)$coef[1:4, 1]
}
}
smart_lm(swiss)
smart_lm(test_data)
smart_lm <- function(x){
x_IV <- x %>%
subset(select = 2:length(.)) %>%
select_if(sapply(., function(x) shapiro.test(x)$p.value > 0.05))
if(length(x_IV) == 0){
return("There are no normal variables in the data")
} else {
fit <- lm(cbind(x[,1], x_IV))
summary(fit)$coef[,1]
}
}
smart_lm(swiss)
smart_lm(test_data)
library(dplyr)
t.test(iris[,1], 4)
t.test(iris[,1:4], 4)
t.test(iris[,1], mu=4)
t.test(iris[,1], mu=4)$coef
t.test(iris[,1], mu=4)$statistic
t_result <- t.test(iris[,1], mu=4)
t_result$estimate
t_result$parameter
t_result$conf.int
c(t_result$statistic, t_result$estimate)
c(t_result$statistic, t_result$parameter)
c(t_result$statistic, t_result$parameter, t_result$p.value)
df <- iris[,1:4]
df
df <- iris[sapply(df, is.numeric)]
df
df <- iris[sapply(df, is.numeric)]
df
general_mean <- 4
sapply(df, function(x) t.test(x, mu=general_mean))
sapply(df, function(x)
t.test(x, mu=general_mean)[c(statistic, parameter, p.value)])
sapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
as.list(sapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
sapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
apply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
lapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
sapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
sapply(df, function(x)
as.list(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
lapply(df, function(x)
as.list(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
lapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
sapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
df_result <- sapply(df, function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
rm(list=ls())
df %>%
select_if(sapply(df, is.numeric))
df %>%
select_if(sapply(df, is.numeric))
df %>%
select_if(is.numeric)
library(dplyr)
df %>%
select_if(is.numeric)
iris %>%
select_if(is.numeric)
iris %>%
select_if(is.numeric) %>%
sapply(function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
general_mean <- 4
iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
iris %>%
select_if(is.numeric) %>%
lapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
library(dplyr)
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]),
FUN.VALUE = 'list')
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]),
FUN.VALUE = 'vector')
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]),
FUN.VALUE = list)
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]),
FUN.VALUE = c(as.vector()))
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]),
FUN.VALUE = c(as.vector('statistic', 'parameter', 'p.value')))
iris %>%
select_if(is.numeric) %>%
vapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
as.list(df_result)
lapply(df_result, function(x) x)
df_result
as.data.frame(df_result)
transform(as.data.frame(df_result))
transform(as.data.frame(df_result))
as.data.frame(df_result)[1,]
as.data.frame(df_result)[,1]
as.data.frame(df_result)
as.data.frame(df_result)$Sepal.Length
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
data.frame(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
df_result
data.frame(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))*T
data.frame(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])).T
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
data.frame(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]).T)
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
df_result
colnames(df_result) = row.names(df_result)
colnames(df_result) = c('statistic', 'parameter', 'p.value')
colnames(df_result_t) = row.names(df_result)
colnames_df = row.names(df_result)
colnames_df = row.names(df_result)
row.names_df = colnames(df_result)
as.matrix(df_result)
as.matrix(df_result).T
transpose(as.matrix(df_result))
t(df_result)
as.list(t(df_result))
sapply(t(df_result), function(x) as.list(x))
as.list(df_result)
list(df_result)
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')], simplify = F)
df_result
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]), simplify = F)
df_result
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
df_result
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[[c('statistic', 'parameter', 'p.value')]])
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
list(df_result)
as.list(df_result)
as.list(df_result, all.names = F)
df_result <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x)
t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')])
df_result
as.list(df_result, all.names = F)
as.list(df_result, all.names = T)
list = as.list(df_result)
list_my = as.list(df_result)
names(list_my)
list_my
lapply(list_my, function(x) names(x) = ''
lapply(list_my, function(x) names(x) = '')
lapply(list_my, function(x) names(x) = '')
list_mod <- lapply(list_my, function(x) names(x) = '')
list_mod
names(list_my) <- ''
list_my
df_result <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x)
as.vector(t.test(x, mu=general_mean)[c('statistic', 'parameter', 'p.value')]))
df_result
df_result <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {}
t_test <- t.test(x, mu=general_mean)
df_result <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
df_result
df_result <- iris %>%
select_if(is.numeric) %>%
sapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
df_result
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
df_result <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
df_result
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
as.vector(c(t_test['statistic'], t_test['parameter'], t_test['p.value']))
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
as.vector(c(t_test['statistic'], t_test['parameter'], t_test['p.value']))
}
)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
unname(c(t_test['statistic'], t_test['parameter'], t_test['p.value']))
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
unname(c(t_test['statistic'], t_test['parameter'], t_test['p.value']))
}
)
iris %>%
select_if(is.numeric) %>%
sapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
unname(c(t_test['statistic'], t_test['parameter'], t_test['p.value']))
}
)
iris %>%
select_if(is.numeric) %>%
sapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(unname(t_test['statistic']), t_test['parameter'], t_test['p.value']))
c(unname(t_test['statistic']), t_test['parameter'], t_test['p.value'])
iris %>%
select_if(is.numeric) %>%
sapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(unname(t_test['statistic']), t_test['parameter'], t_test['p.value'])
}
)
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(unname(t_test['statistic']), t_test['parameter'], t_test['p.value'])
}
)
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
t_test['statistic'], t_test['parameter'], t_test['p.value'])
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
list_my <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
unname(list_my)
list_my
list_my
list_my <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
c(t_test['statistic'], t_test['parameter'], t_test['p.value'])
}
)
list_my
list_my <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean))
t_test <- t.test(x, mu=general_mean)
list_my <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)
}
)
list_my
lapply(list_my, function(x) x$statistic)
lapply(list_my, function(x) c(x$statistic, x$parameter)
lapply(list_my, function(x) c(x$statistic, x$parameter))
lapply(list_my, function(x) c(x$statistic, x$parameter))
lapply(list_my, function(x) c(x$statistic, x$parameter, x$p.value))
list_my <- iris %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)}) %>%
lapply(., function(x) c(x$statistic, x$parameter, x$p.value))
list_my
one_sample_t <- function(test_data, general_mean){
test_data %>%
select_if(is.numeric) %>%
lapply(., function(x) {
t_test <- t.test(x, mu=general_mean)}) %>%
lapply(., function(x) c(x$statistic, x$parameter, x$p.value))
}
one_sample_t(iris)
one_sample_t(iris, 4)
library(dplyr)
rm(list=ls())
library(data.table)
